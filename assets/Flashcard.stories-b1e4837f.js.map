{"version":3,"file":"Flashcard.stories-b1e4837f.js","sources":["../../node_modules/classnames/index.js","../../src/hooks/useToggle.js","../../src/Flashcard/Guess/Guesser.jsx","../../src/Flashcard/Guess/index.jsx","../../src/Flashcard/Fade/index.jsx","../../src/Flashcard/Flip/index.jsx","../../src/Flashcard/index.jsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { useState } from \"react\"\n\nexport const useToggle = () => {\n    const [isToggled, setIsToggled] = useState(false);\n\n    const toggle = () => setIsToggled((previous) => !previous);\n    const on = () => setIsToggled(true);\n    const off = () => setIsToggled(false);\n\n    return {\n        isToggled,\n        toggle,\n        on,\n        off\n    }\n}","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useRef, useState } from \"react\";\nimport { useToggle } from \"../../hooks\";\n\nconst LETTER_PATTERN = /[a-zA-Z]/;\n\nexport const Guesser = ({ answer }) => {\n  const { isToggled, toggle } = useToggle();\n  const [input, setInput] = useState(Array.from(answer).fill(\"\"));\n  const inputRefs = Array.from(answer, () => useRef(\"\"));\n  const checkButtonRef = useRef();\n\n  const moveTo = (position) => {\n    if (position === answer.length) {\n      checkButtonRef.current.focus();\n      return;\n    }\n\n    if (inputRefs[position].current.disabled) return moveTo(position + 1);\n\n    inputRefs[position].current.focus();\n  };\n\n  return (\n    <div className=\"guesser\">\n      {inputRefs.map((ref, index) => {\n        const isDash = answer[index] === \"-\";\n\n        const isLetterGuessed = isToggled && answer[index] === input[index];\n        const isLetterElsewhere =\n          isToggled &&\n          !isLetterGuessed &&\n          input[index] &&\n          answer.includes(input[index]);\n\n        return (\n          <input\n            ref={ref}\n            key={index}\n            className={classNames({\n              \"guessed-correctly\": isLetterGuessed,\n              exists: isLetterElsewhere,\n            })}\n            type=\"text\"\n            size={2}\n            disabled={isDash}\n            value={isDash ? \"-\" : input[index]}\n            onChange={(event) => {\n              const letter = event.target.value.slice(-1);\n              if (!LETTER_PATTERN.test(letter)) return;\n\n              const newInput = Array.from(input);\n              newInput.splice(index, 1, letter);\n\n              setInput(newInput);\n              moveTo(index + 1);\n            }}\n          />\n        );\n      })}\n      <button ref={checkButtonRef} onClick={toggle}>\n        {isToggled ? \"Hide\" : \"Check\"}\n      </button>\n    </div>\n  );\n};\n\nGuesser.propTypes = {\n  answer: PropTypes.string,\n};\n\nGuesser.defaultProps = {\n  answer: \"\",\n};\n","import classNames from \"classnames\";\nimport { useToggle } from \"../../hooks\";\nimport { Guesser } from \"./Guesser\";\nimport \"./styles.css\";\n\nexport const Guess = ({ answer }) => {\n  const { isToggled, toggle } = useToggle();\n\n  return (\n    <div className=\"guess-card\" onClick={toggle}>\n      <div className={classNames(\"guess-card-material\")} />\n      <Guesser answer={answer} />\n    </div>\n  );\n};\n","import classNames from \"classnames\";\nimport { useToggle } from \"../../hooks\";\nimport \"./styles.css\";\n\nexport const Fade = ({ answer }) => {\n  const { isToggled, toggle } = useToggle();\n  return (\n    <div className=\"fade-card\" onClick={toggle}>\n      <div className={classNames(\"fade-card-material\", { faded: isToggled })}>\n        {isToggled ? (\n          <div className=\"fade-card-answer\">\n            <span>{answer}</span>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n","import classNames from \"classnames\";\nimport { useToggle } from \"../../hooks\";\nimport \"./styles.css\";\n\nexport const Flip = ({ answer }) => {\n  const { isToggled, toggle } = useToggle();\n\n  const className = classNames(\"flip-card-inner\", {\n    \"flip-card-inner-reveal\": isToggled,\n  });\n\n  return (\n    <div className=\"flip-card\">\n      <div className={className} onClick={toggle}>\n        <div className=\"flip-card-front\"></div>\n        <div className=\"flip-card-back\">\n          <p>{answer}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import PropTypes from \"prop-types\";\nimport { Guess } from \"./Guess\";\nimport { Fade } from \"./Fade\";\nimport { Flip } from \"./Flip\";\n\n/**\n * Flashcard\n * @param {(\"fade\" | \"flip\" | \"guess\")} type\n */\nexport const Flashcard = ({ answer, type }) => {\n  return {\n    fade: <Fade answer={answer} />,\n    flip: <Flip answer={answer} />,\n    guess: <Guess answer={answer} />,\n  }[type];\n};\n\nFlashcard.propTypes = {\n  /**\n   * Answer\n   */\n  answer: PropTypes.string.isRequired,\n  /**\n   * Type\n   */\n  type: PropTypes.oneOf([\"fade\", \"flip\", \"guess\"]),\n};\n\nFlashcard.defaultProps = {\n  answer: \"Answer\",\n  type: \"flip\",\n};\n"],"names":["hasOwn","classNames","classes","i","arg","argType","inner","key","module","useToggle","isToggled","setIsToggled","useState","previous","LETTER_PATTERN","Guesser","answer","toggle","input","setInput","inputRefs","useRef","checkButtonRef","moveTo","position","jsxs","ref","index","isDash","isLetterGuessed","isLetterElsewhere","jsx","event","letter","newInput","PropTypes","Guess","Fade","Flip","className","Flashcard","type"],"mappings":"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","x_google_ignoreList":[0]}